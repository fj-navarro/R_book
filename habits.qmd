# Programming Habits

Programming produces code, and code is a tool of communication. Obviously code tells the computer what you want it to do. But it also communicates meaning to other humans. Thinking about code as a vehicle for communication is important because every project you do is fundamentally **collaborative**. Even if you’re not working with other people, you’ll definitely be working with future-you! 

Writing **clear code** is important so that others (like future-you) can understand why you tackled an analysis in the way you did. That means getting better at programming also involves getting better at communicating. Over time, you want your code to become not just easier to write, but easier for others to read.


## Useful Guidelines

We find the following to be useful guidelines:

-   Start each program with some **comments** giving the name of the program, the author, the date it was written, and what the program does. A description of what a program does should explain what all the inputs and outputs are.

-   **Variable names** should be descriptive, that is, they should give a clue as to what the value of the variable represents. Avoid using reserved names or function names as variable names (in particular t, c, and q are all function names in R). You can find out whether or not your preferred name for an object is already in use by the `exists()` function.

-   Use **blank lines** to separate sections of code into related parts, and use **indenting** to distinguish the inside part of an `if` statement or a `for` or `while` loop.

-   **Document the programs** that you use in detail, ideally with citations for specific algorithms. There is no worse feeling than returning to undocumented code that had been written several years earlier to try to find and then explain an anomaly.
