# Missing Values

R represents missing observations through the data value **NA**. It is easiest to think of **NA** values as place holders for data that should have been there, but, for some reason, are not.

## Detect NA

We can **detect** whether variables are missing value using:

-   `is.na()` is used to test objects if they are NA.
-   `is.nan()` is used to test for NaN.

*Example:*

```{r}
x <- c(1, 2, NaN, NA, 4) 
is.na(x) 
is.nan(x)
```

To check if there is any **NA** in a dataframe:

*Example:*

```{r}
any(is.na(x))
```

## Remove NAs

*Example:*

```{r}
a <- c(11, NA, 13)
mean(a, na.rm = TRUE)
```

## Extract NA from a vector

*Example:*

```{r 6}
x <- c(1, 2, NA, 3) 
z <- is.na(x) 
x[!z]
```

## NA vs NULL

Note that **NA** and **NULL** are not equivalent:

-   **NA** is a place holder for something that exists but is missing.

-   **NULL** stands for something that never existed at all.

## Removing NA values

You can remove rows with **NA** values in any variables:

``` r
na.omit(data)
```

```{r 7}
## Another example
x <- c(1, 2, NA, 4, NA, 5) 
bad <- is.na(x) 
x[!bad]
```

-   How to take the subset with no missing values in any of those objects?

``` r
good <- complete.cases(airquality) 
head(airquality[good,])
```
